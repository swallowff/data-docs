upstream miniAPP {
    server 127.0.0.1:8091 weight=5;
    server 127.0.0.1:8092 weight=5;
    server 127.0.0.1:8093 weight=5;
}

server {
        listen  80;
        server_name apps.98htcz.com;
        root   /data/code_repo/;
        #ssl on;
        charset utf-8;
        access_log  /data/wwwlogs/host.access.log;
#       ssl_certificate   ssl/214982359390200.pem;
#       ssl_certificate_key  ssl/214982359390200.key;
#       ssl_session_timeout 5m;
#       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#       ssl_prefer_server_ciphers on; 
        return 301 https://apps.98htcz.com$request_uri;

        #对 / 所有做负载均衡+反向代理
        location / {
            index  index.jsp index.html index.htm;
            proxy_pass       http://miniAPP;
            proxy_redirect off;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        location /websocket {
             proxy_pass http://127.0.0.1:9999;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
        }       

        location ~ .*\.(js|css)$ {
            proxy_pass http://127.0.0.1:8080;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}

server {
        listen 443 ssl;
        server_name apps.98htcz.com;
        root /data/code_repo/;
        charset utf-8;
        access_log  /data/wwwlogs/host.access.log;
        #ssl on;
        ssl_certificate   /usr/local/nginx/cert/apps.98htcz.com.pem;
        ssl_certificate_key  /usr/local/nginx/cert/apps.98htcz.com.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
	
	location /appport {
	    index  index.jsp index.html index.htm;
            proxy_pass       http://localhost:8083;
            proxy_redirect off;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
	}

	location /framework {
            index  index.jsp index.html index.htm;
            proxy_pass       http://localhost:8083;
            proxy_redirect off;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }       
 
        location /miniAPP {
    	    index  index.jsp index.html index.htm;
            proxy_pass       http://miniAPP;
            proxy_redirect off;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    	}
        #对 / 所有做负载均衡+反向代理
        location /0qHx5GsSTF.txt {
             root   /data/validation;
        }

         location ~ .*\.(js|css)$ {
             proxy_pass http://miniAPP;
         }

        location /websocket {
             proxy_pass http://127.0.0.1:9999;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


}


