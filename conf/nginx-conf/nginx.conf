user www www;
worker_processes 8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

error_log /data/wwwlogs/error_nginx.log crit;
pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;

events {
  use epoll;
  worker_connections 65535;
  accept_mutex off;
  multi_accept on;
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 8k;
  large_client_header_buffers 4 32k;
  client_max_body_size 100m;
  client_body_buffer_size 10m;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 32;
  server_tokens off;
  tcp_nodelay on;

  #fastcgi_connect_timeout 300;
  #fastcgi_send_timeout 300;
  #fastcgi_read_timeout 300;
  #fastcgi_buffer_size 64k;
  #fastcgi_buffers 4 64k;
  #fastcgi_busy_buffers_size 128k;
  #fastcgi_temp_file_write_size 128k;
  #fastcgi_intercept_errors on;

  #Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  ##Brotli Compression
  #brotli on;
  #brotli_comp_level 6;
  #brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

  ##If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  #open_file_cache max=1000 inactive=20s;
  #open_file_cache_valid 30s;
  #open_file_cache_min_uses 2;
  #open_file_cache_errors on;

######################## default ############################
  server{
        listen 80 default;
        server_name _;
        return 404;
  } 

  server {
    listen 80;
    server_name cm.helloccs.cn;
    #access_log /data/wwwlogs/access_nginx.log combined;
    root /www/wwwroot;
    index index.html index.htm index.php;
    #error_page 404 /404.html;
    #error_page 502 /502.html;
    #rewrite (.*) https://$server_name$request_uri redirect;

    location / {
        root   /www/wwwroot/default;
        index  index.jsp index.html index.htm;
        #proxy_redirect off;
        # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
        proxy_set_header  Host  $host;
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

   # location ~ \.flv$ {
   #   root /data/upload/media;
   #   flv;
   #}

   #location ~ \.mp4$ {
   #   root /data/upload/media;
   #   mp4;
   #}

   #location /nginx_status {
   #   stub_status on;
   #   access_log off;
   #   allow 127.0.0.1;
   #   deny all;
   #}
  
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
      expires 30d;
      access_log off;
    }
    location ~ .*\.(js|css)?$ {
      expires 7d;
      access_log off;
    }
    location ~ ^/(\.user.ini|\.ht|\.git|\.svn|\.project|LICENSE|README.md) {
      deny all;
    }

   #location /hls {
   # Serve HLS fragments;
   #alias /data/upload/media/app;
   #}
  }
  
  server {
        listen 443 ssl;
        server_name cm.helloccs.cn;
        root /www/wwwroot;
        charset utf-8;
        access_log  /data/wwwlogs/host.access.log;
        #ssl on;
        ssl_certificate   /usr/local/nginx/cert/apps.98htcz.com.pem;
        ssl_certificate_key  /usr/local/nginx/cert/apps.98htcz.com.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

	#location ~ \.flv$ {
        #   root /data/upload/media;
        #   flv; 
        #}       
                
        #location ~ \.mp4$ {
        #   root /data/upload/media;
        #   mp4; 
        #}

        #对 / 所有做负载均衡+反向代理
        location /default {
            root   /www/wwwroot/default;
            index  index.jsp index.html index.htm;
            # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
             proxy_set_header  Host  $host;
             proxy_set_header  X-Real-IP  $remote_addr;
             proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location ~ .*\.(js|css)$ {
        }
		 
	#ws协议转发
        location /websocket {
             proxy_pass http://127.0.0.1:8999;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


}

########################## vhost #############################
  include vhost/*.conf;
}
